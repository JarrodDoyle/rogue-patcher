{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}{\f4\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Times;}
{\f5\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helvetica;}{\f6\fmodern\fcharset0\fprq1{\*\panose 00000000000000000000}Courier;}{\f7\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Geneva;}
{\f8\froman\fcharset0\fprq2{\*\panose 00000000000000000000}Tms Rmn;}{\f9\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}Helv;}{\f10\froman\fcharset0\fprq2{\*\panose 00000000000000000000}MS Serif;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f12\froman\fcharset0\fprq2{\*\panose 00000000000000000000}New York;}{\f13\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}System;}
{\f14\fnil\fcharset2\fprq2{\*\panose 05000000000000000000}Wingdings;}{\f15\fswiss\fcharset0\fprq2{\*\panose 020b0604030504040204}Tahoma;}{\f106\fswiss\fcharset238\fprq2 Tahoma CE;}{\f107\fswiss\fcharset204\fprq2 Tahoma Cyr;}
{\f109\fswiss\fcharset161\fprq2 Tahoma Greek;}{\f110\fswiss\fcharset162\fprq2 Tahoma Tur;}{\f111\fswiss\fcharset186\fprq2 Tahoma Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;
\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;
\red192\green192\blue192;}{\stylesheet{\nowidctlpar\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}{\s15\nowidctlpar\widctlpar\adjustright \f2\fs20\cgrid \sbasedon0 \snext15 Plain Text;}{
\s16\nowidctlpar\widctlpar\adjustright \cbpat9 \f15\fs20\cgrid \sbasedon0 \snext16 Document Map;}{\*\cs17 \additive \ul\cf2 \sbasedon10 Hyperlink;}{\*\cs18 \additive \ul\cf12 \sbasedon10 FollowedHyperlink;}}{\info{\title  : Revision 3, Mar 23 2000}
{\author Keith Kelly}{\operator Keith Kelly}{\creatim\yr2000\mo5\dy15\hr13\min59}{\revtim\yr2000\mo5\dy15\hr13\min59}{\version2}{\edmins0}{\nofpages20}{\nofwords8166}{\nofchars41648}{\*\company  }{\nofcharsws57163}{\vern71}}\margl1319\margr1319 
\widowctrl\ftnbj\aenddoc\formshade\viewkind1\viewscale100\pgbrdrhead\pgbrdrfoot \fet0\sectd \linex0\endnhere\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}
{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain 
\s15\fi-2520\li2520\nowidctlpar\widctlpar\outlinelevel0\adjustright \f2\fs20\cgrid {Revision 5, May 15, 2000
\par }\pard \s15\fi-2520\li2520\nowidctlpar\widctlpar\adjustright {Made by Zail (kkelly@technologist.com) with a little help by the ttlg Thief Editor's Guild (www.ttlg.com).  
\par CAUTION - }{ONLY THE FIRST 12}{/20}{ PAGES CONTAIN USEFUL INFORMATION.  }{This file was made with intermediate and above level Dromeders in mind.  Beginners may understand some of the commands b
ut not all.  As you learn more definitions you will get more out of this file.  Not all commands are bug free.  Some commands fit under multiple headings so they are in here multiple times.  Always remember to save your mission often.  This is not a tutor
ial, it is a command reference file.  I am not responsible for messing up your level because of any of these commands.  Fully read and understand a command's description before using it. Any submissions or corrections 
to this file are welcome.  If you include this file in a guide please email me and let me know.  The best way to find a command is to use the find feature on your word processor.  Thank-you for taking the time to read this.
\par 
\par }{\b Table of Contents:
\par }\pard \s15\fi-1800\li2520\nowidctlpar\widctlpar\adjustright {\b Newbie Commands
\par Well-known Commands
\par Set-up Commands
\par Lesser-known Commands
\par Useful In-game Commands
\par Useless In-game Commands
\par Dromed.cfg Commands
\par Weather/Sky Commands
\par Multibrush Commands
\par Picture Commands
\par Objectives/Goals Commands
\par }\pard \s15\fi-1800\li2520\nowidctlpar\widctlpar\tx1710\adjustright {\b \tab Variables
\par }\pard \s15\fi-1800\li2520\nowidctlpar\widctlpar\adjustright {\b Menu Commands
\par }\pard \s15\fi-1800\li2520\nowidctlpar\widctlpar\tx1710\adjustright {\b \tab File
\par \tab Edit
\par \tab View and Right-click on a Window
\par \tab Shapes
\par \tab Tools
\par \tab Editors
\par \tab Game
\par \tab Mbrush
\par Bound Commands and Screen Bottom Commands
\par AI Useful Stuff
\par AI Useless
\par Useless Commands
\par Commands that are Not Understood or Do Not Work}{
\par 
\par }\pard \s15\fi-2520\li2520\nowidctlpar\widctlpar\tx1710\adjustright {
\par }\pard \s15\fi-2520\li2520\nowidctlpar\widctlpar\adjustright {\b Newbie commands
\par }{cam_to_brush        :  move camera to center of the current brush
\par ambient             :  sets the ambient lighting for a level.  I recommend \lquote ambient 20\rquote 
 for Thief 1.  For Thief 2, you must enter 3 numbers for this command.  The numbers correspond to amount of red, blue, and green light to add.  I recommend \lquote ambient 20 20 20\rquote  for normal white light.
\par add_family          :  add another texture family. For Thief 2 they are Ancient, ArtDeco, ArtDMisc, ArtDout, catacomb, Cave, CeilPain, church, city, CivicB2, CivicBui, Core_1, Core_2, Core_3, keeper, lostcty, maw, MBFloor, Mech, newcity, NewKeep, NewMech
, NewMetal, rescor_1, rescor_2, Ruined, Tower2, vicm012, VicM01, VicM04, vicm07, VicM09, vmaw, Vrescor1, and WdFloor.  The texture families for Thief 1 are: dungeon, city, church, cave, catacomb, concastle, baf
ford, sewer, rescore, temple, mine, ruined, metals, core, ancient, maw, ramirez, lostcty, newcity, keeper, newkeep, basement, tower2.  Do not add the following families unless you know what you are doing: waterhw, skyhw, sky, porttest, water, or mech.

\par remove_family       :  remove family, use "all" to clear all
\par compress_family     :  remove unused textures from family or all.  ie "compress_family all"
\par script_load         :  Load a script file to add to mission.  use "script_load convict" to get things to work normally in the game.  Only play with other script files if you know what you are doing.
\par show_stats          :  will cause stats to appear at upper left of screen when in game mode.
\par edit_screen_size    :  changes the window size of dromed when typed in dromed.cfg  You must restart dromed for the effect to take place.  The size should be entered like this "edit_screen_size 600,800"
\par persistant_player_pos:  Lets you start at the camera when you enter game mode.
\par no_endgame          :  Stops you from being sent to the debrief screen in game mode.
\par ai_aware_of_player  :  causes AI to ignore you.  They still can be attacked by the player.
\par ai_forget_player    :  causes AI to forget they ever saw you.  For game mode.}{\b 
\par 
\par These are well-known commands.
\par }{
\par cam_to_brush        :  move camera to center of the current brush
\par ambient             : }{sets the ambient lighting for a level.  I recommend \lquote ambient 20\rquote 
 for Thief 1.  For Thief 2, you must enter 3 numbers for this command.  The numbers correspond to amount of red, blue, and green light to add.  I recommend \lquote ambient 20 20 20\rquote  for normal white light.}{
\par dump_cmds           :  dump command list to file.  The file is like this help file but is unorganized, long, and hard to read.
\par compress_family     :  remove unused textures from family or all.  ie "compress_family all"
\par add_family          :  add another texture family. For Thief 2 they are Ancient, ArtDeco, ArtDMisc, ArtDout, catacomb, Cave, CeilPain, church, city, CivicB2, CivicBui, Core_1, Core_2, Core_3, keeper, lostcty, maw, MBFloor, Mech, newcity, NewKeep, NewMech
, NewMetal, rescor_1, rescor_2, Ruined, Tower2, vicm012, VicM01, VicM04, vicm07, VicM09, vmaw, Vrescor1, and WdFloor.  The texture families are: dungeon, city, church, cave, catacomb, concastle, bafford, sewer, rescore, te
mple, mine, ruined, metals, core, ancient, maw, ramirez, lostcty, newcity, keeper, newkeep, basement, tower2.  Do not add the following families unless you know what you are doing: waterhw, skyhw, sky, porttest, water, mech,
\par remove_family       :  remove family, use "all" to clear all and leave just jorge.
\par 
\par 
\par }{\b These are lesser known but should be known for setting things up.
\par }{
\par autosaves           :  do we autosave to }{p_portal}{.cow on exit or portalization?  default is on
\par tjoint              :  do we fix T-joints when portalizing?  default is on
\par script_load         :  Load a script file to add to mission.  use "script_load convict" to get things to work normally in the game.  Only play with other script files if you know what you are doing.
\par script_drop         :  drop a script file from mission.
\par script_drop_all     :  drop all script files from mission.
\par brush_to_room       :  put a room around your brush.  An argument added to this tells Dromed how far you want the room to stick out from the brush.
\par set                 : Used to set the config variables to specific numbers, i.e set game_mode_backup 0.
\par toggle_3d           :  Turns the Camera off and on.  Caution You cannot move the 2d views while the camera is off.
\par 
\par }{\b Lesser known commands that are useful.
\par }{
\par wall_object         :  moves the object to the wall.  Similar to floor me and just as buggy. It may alter the object's orientation.
\par ceil_object         :  moves the object to the ceiling.  Similar to floor me and just as buggy. It may alter the object's orientation.
\par clear_surface_cache :  use this command if you load more than one mission in a session.
\par vm_teleport         :  move camera to x,y,z ie "vm_teleport 50,25,-300"
\par find_obj            :  Look up an object by name or number
\par destroy_obj         :  Destroy an object by name or number
\par edit_obj            :  edit an object by name or number
\par obj_histogram_popup :  Brings up obj list sorted by usage.
\par obj_alpha_popup     :  Brings up obj list sorted alphabetically.
\par copy_props_to       :  Copy all props from selection to arg.  Useful for cloning objects without pressing "insert" and obj already in place.  Only do this on objects in the same archtype.
\par fix_rooms           :  If you have accidentally corrupted your room table set up (when on a room it says unknown rather than default, etc) then this might fix it.
\par lit_obj_toggle      :  Same affect as light_bright but on objects, useful if you haven\rquote t lit your level yet.
\par compress_br_ids     :  compact terrain brush ids
\par hilight_by_prop     :  give a property name (base categories when you press add in an object's properties) and Dromed will highlights obj's with it
\par hilight_nonaxial    :  highlights any terrain with non 90 angles (0,90,180,270)
\par hilight_media       :  highlight terrain of a certain type (0-solid, 1-air, 2-water, 3-flood, etc)
\par hilight_texture     :  highlight terrain with specified texture (number or name) If unknown Dromed will hilight jorge.  Only works with default textures on brushes.
\par hilight_clear       :  clears the hilighted selection
\par 
\par }{\b Ingame commands.  press "Shift ;" (aka ":") while ingame to get a prompt to enter these in.  These will not work when you run a level in the actual game (not dromed).
\par Useful  Ingame Commands
\par }{
\par win_mission         :  Win the mission
\par show_stats          :  will cause stats to appear at upper left of screen
\par stats_full          :  more stats/less stats
\par scale_sim_time      :  Scale the speed at which game mode runs
\par scale_player_speed  :  Scale the player's speed.  Caution - running at 5 times normal into a wall will cause death.
\par add_hp              :  give player the specified amount of hp.  Negative numbers work.
\par test_book           :  book <text>,<art>
\par debrief             :  Go to debrief screen.
\par objectives          :  Go to objectives screen.
\par loadout             :  Go to loadout screen.
\par ai_aware_of_player  :  causes AI to ignore you.  They still can be attacked by the player.
\par ai_forget_player    :  causes AI to forget they ever saw you.
\par ai_sleep_all        :  Put all AIs into pause mode
\par ai_wake_all         :  Wake all sleeping AIs (unpause)
\par ai_wake             :  Wake a sleeping AI.  objID must be given
\par sky_dump            :  DROMED 2 ONLY This spits out some stats on what the sky is doing and the sky\rquote s memory usage.
\par 
\par }{\b Useless Ingame Commands
\par }{
\par aiawareofplayer     :  if typed you will not be able to make ai's unaware of you until it's typed again.
\par aiforgetplayer      :  if typed you will not be able to make ai's forget you until it's typed again.
\par quit_game           :  Quit the game
\par halt_player         : Only really useful if you have been mucking about with gravity in someway and have turned the backup off and want Garret to stay floored.
\par automap             :  Display the automap
\par player_cam_control  :  0 for look forward, 1 for move camera to next object, 2 for detach the camera from the object, 3 attach the camera back to object, 4 save camera location, 5 load camera location
\par cam_attach          :  attach camera to object.  The camera will see though the object's eye.  Guards have their eye in their gut.  Possibly it goes into the centre of the object brush.
\par player_cam_save     :  save what object the cam is currently on to ARG, or drom000.cam
\par player_cam_load     :  load cam to the object saved as ARG or cam000.loc
\par cret_weap_abort     :  stop readying an attack
\par player_weap_abort   :  stop readying an attack by the player
\par use_item            :  use item  0 = release use button, 1 = hold down use button
\par use_weapon          :  use weapon  0 = release attack button, 1 = hold down attack button
\par cycle_item          :  cycle your item  1 = forward, -1 = backward
\par cycle_weapon        :  cycle your weapon  1 = forward, -1 = backward
\par inv_select          :  Select an inventory object by name (or archetype number)
\par drop_item           :  Drop (actually, throw) your currently selected item (doesn't work on all items ie. coins)
\par clear_item          :  Clear the player's 'current item' selection.
\par clear_weapon        :  Clear the player's 'current weapon' selection.
\par clear_weapon_and_item:  Clear both the player's 'current item' and 'current weapon.'
\par player_detach_arm   :  toggles whether the weapon arm is on. (you cannot use weapons when arm is off, but you can make sounds like you are)
\par game_message        :  Display the typed message following this command on the game screen
\par load_game           :  Go to the game load UI
\par save_game           :  Go to the game save UI
\par make_sound_z        :  Generate a sound at 0,0,0
\par make_sound          :  Generate a sound at the player.  The sound is a guard's alert call}{\b 
\par 
\par These commands are so useful that you should put them in dromed.cfg !
\par }{
\par check_rooms         :  Checks to see if room brushes intersect in a solid.  Makes the brushes a different colour.
\par edit_screen_size    :  changes the window size of dromed.  You must restart dromed for the effect to take place.  The size should be entered like this "edit_screen_size 600,800"
\par persistant_player_pos:  Lets you start at the camera when you enter game mode.
\par no_endgame          :  Stops you from being sent to the debrief screen in game mode.
\par mlog                :  If used with a filename afterwards will allow you to dump details to the mlog. This is useful for AI debugging, and any command t
hat dumps data or lists it will end up in the mono log. mlog again closes the file so that you can read it. It also lists errors while the game is running.
\par speed_fac           :  sets how fast the camera moves in 3d mode.  Relative camera speed may vary from level to level due to complexity and size.  Default is 1. Uses base 2 (like grid sizes)
\par color_depth         :  DROMED 2 ONLY set to 16 to get the family colours normal.
\par 
\par }{\b Weather/Sky Commands (Dromed II only)
\par 
\par }{fog_on              : is fog currently being used?  You might have to change the settings under the editors menu as well to get this to work.
\par fog_dist            : the distance that garrett wouldn\rquote t be able to see anthing through the fog
\par fog_r               : The red value of the fog.  A normal white fog would have the red, green, and blue values of fog to be equal at 20.  A darker fog would have a larger value, like 230.  The value can be anything between 0 and 255.
\par fog_g               : The green value of the fog.
\par fog_b               : The blue value of the fog.
\par sky_setlong         : Debug Sky Longitude
\par sky_setlat          : Debug Sky Latitude
\par sky_dump            : Gives a list of all meshes used in the sky
\par stars_spin          : The rate at which the stars spin.
\par cloud_row           : Debug Cloud Row
\par cloud_col           : Debug Cloud Col
\par cloud_glow          : Sets the amount of detail in your clouds.  
\par cloud_cfg           : Debug Config Ix
\par cloud_dump          : Dump cloud deck info
\par }{sky_d}{ump            : }{This spits out some stats on what the sky is doing and the sky\rquote s memory usage.}{  Works ingame}{
\par }{\b Weather commands (Both Dromeds)
\par }{load_sky            :  load a sky bitmap set choose from: dsky, nsky  You must have skyrendering mode set to texture for this to work.
\par set_star_count      :  how many stars do you want in the sky
\par set_star_rate       :  how fast they rotate across the screen
\par set_star_axis       :  which axis (0 for x, 1 for y, 2 for z) rotates
\par star_base_color     :  enter the number of the colour you want the stars
\par star_num_colors     :  number of palette colors
\par }{
\par }{\b These commands are useful when you are dealing with multibrushes.  They are}{ }{\b also good when your level is not on the grid.  Just set the grid to the appropriate size and go.
\par }{
\par hilight_check_snap  :  hilight unangled, unsnapped brushes, or if (1) all unsnapped brushes
\par hilight_do_snap     :  grid snap all hilight brushes...
\par hilight_global      :  if 0, it will hilight everything, if 1 it will highlight nothing
\par hilight_clear       :  clears the hilighted selection
\par 
\par }{\b These commands are good for makeing pictures to send to others.  Caution: set}{ }{\b gamma to max or the picture will be too dark.
\par }{
\par screen_dump         :  take a screen shot
\par light_bright        :  makes texture brushes lit up.  Use this if you have not lit your level yet.
\par show_image          :  Shows an image.  It is unknown how to return to Dromed afterwards.  Use a graphics program or Internet browser instead.
\par 
\par }\pard \s15\nowidctlpar\widctlpar\adjustright {\b Use these when setting objectives for your level.
\par }\pard \s15\fi-2520\li2520\nowidctlpar\widctlpar\adjustright {
\par quest_create_mis    :  this lets you enter mission variables
\par quest_delete        :  this lets you delete mission variables that you do not want.  there is no need to add the variable's value after this.  ie.  "quest_delete goal_target_5"
\par }\pard \s15\fi-2520\li3240\nowidctlpar\widctlpar\adjustright {
\par }{\b The mission variables t
hat you can use with this are (# represents the ID of the goal).  To set a value for any of these variables, follow them by a comma then a space before entering in the number.  If you do not do this they will not work!  eg. "quest_create_mis goal_visible_
0, 1" 
\par }{
\par goal_visible_#      :  tells dromed if you want the player to see this goal at the start of the mission.  0 for invisible and 1 for visible.  This must be entered for all goals.
\par goal_state_#        :  tells dromed what you want the goal to be set as.  0 for incomplete, 1 for complete, 2 for inactive (the goal is not relevent anymore), 3 for failed.  This must be entered for all goals.
\par goal_type_#         :  tells dromed what kind of goal this is.  0 for steal, 1 for kill, 2 for loot, 3 for goto.  Goto requires a concrete room with a WelcomeRoom script on it.  See other tutorials for details.
\par goal_target_#       :  lets you select an object ID to steal/slay/goto.
\par goal_loot_#         :  how much total loot do you need to satisfy your type 2 goal
\par goal_gold_#         :  how much gold do you need to satisfy your type 2 goal
\par goal_gems_#         :  how much gems do you need to satisfy your type 2 goal
\par goal_goods_#        :  how much goods do you need to satisfy your type 2 goal
\par goal_special_#      :  how many special flags do you need to satisfy your type 2 goal
\par goal_final_#        :  tells dromed that it shouldn't check this off as complete until all goals are completed.  Good for do not kill and goto room objectives.  Set the value as 1
\par goal_reverse_#      :  instead of telling the player to do something, this reverses the goal so it says do not do something.  Set the value as 1 to use.
\par goal_irreversible_# :  Once this goal has been set to complete, it cannot be changed to incomplete without a questvar trap.  Must be set to 1 to use.
\par goal_min_diff_#     :  Sets the minimum difficulty that this goal will be seen at.  0 for normal, 1 for expert, 2 for hard.  If unstated, Dromed assumes that minimum difficulty is normal.
\par goal_max_diff_#     :  similar to goal_min_diff but for maximums.  If unstated, Dromed assumes that maximum difficulty is expert.
\par difficulty          :  Sets the amount of health and objectives that Garrett will have in game mode
\par process_difficulty  :  Prep level for difficulty.  Save your game before entering this command and restore the level afterwards.  This can delete some objects from your level that are difficulty dependant.
\par map_min_page        :  sets the number of the first map page.  If you do not have a map set this to 1 along with map_m
ax_page and add a blank map to your level.  This normally starts at 001.  The map should be named map001.pcx  This command must be paired with map_max_page.
\par map_max_page        :  set it to the same number as map_min_page.  More than one map causes thief to overlay the two maps when switching between them while ingame.  This command must be paired with map_min_page.
\par }\pard \s15\fi-2520\li2520\nowidctlpar\widctlpar\adjustright {
\par }{\b These can be done using a menu selection:
\par }{
\par }\pard \s15\fi-2520\li3240\nowidctlpar\widctlpar\adjustright {\b : File
\par }{save_cow            :  Save world to file
\par save_mission        :  Save mission to file
\par save_gamesys        :  Save gamesys info only
\par load_file           :  Load a .MIS, .COW, or .GAM file
\par load_gamesys        :  Load a .GAM file - Resets the level
\par set_gamesys         :  Set gamesys file for current mission
\par new_world           :  starts a new mission
\par add_family          }{:  add another texture family. For Thief 2 they are Ancient, ArtDeco, ArtDMisc, ArtDout, catacomb, Cave, CeilPain, church, city, CivicB2, CivicBui, Core_1, Core_2, Core_3, keeper, lostcty, maw, MBFloor, Mech, newcity, NewKeep, 
NewMech, NewMetal, rescor_1, rescor_2, Ruined, Tower2, vicm012, VicM01, VicM04, vicm07, VicM09, vmaw, Vrescor1, and WdFloor.  The texture families for Thief 1 are: dungeon, city, church, cave, catacomb, concastle, baf
ford, sewer, rescore, temple, mine, ruined, metals, core, ancient, maw, ramirez, lostcty, newcity, keeper, newkeep, basement, tower2.  Do not add the following families unless you know what you are doing: waterhw, skyhw, sky, porttest, water, or mech.}{ 
(also see remove_family and compress_family)
\par script_load         :  Load a script file to add to mission.  use "script_load convict" to get things to work normally ingame.  Only play with other script files if you know what you are doing.
\par file_menu           :  Bring up the file menu box that has save, load, create.  This defaults to cow files.
\par quit_game           :  Exits Dromed
\par 
\par }{\b : Edit
\par }{undo                :  undo last thing done (dangerous and buggy)
\par redo                :  cancel the last undo (dangerous and buggy)(not really in the edit menu, but should be)
\par delete_brush        :  deletes selected object (the clear command)
\par insert_brush        :  clones selected object (clone command)
\par 
\par }{\b : View and Right-click on a window
\par }{zoom_all            :  zoom all 2d cameras (0.5 for half the view (zoom in), 1 to keep things the same, 2 to double the view (zoom out), 3 to triple the view, ...)
\par zoom_2d             :  zoom current camera similar to zoom_all(I'm unsure on how to select a view in order to do this)
\par synch_all           :  allows you to move all the views with one teleportation click
\par vm_layout 4         :  Changes the views of Dromed.  4 for recenter dividers
\par ai_draw_cells       :  Shows the ai cells in the dromed editor windows, not as useful as...
\par ai_draw_links       :  Shows the ai links through the cells, essentially, the path database if a route is in white the AI can do it, if it is in red they can't. Very useful for isolating path find errors.
\par show_phys_models    :  Shows the size of objects in the 3d/game views (pink).  Also shows headings for lift type objects (dark blue)
\par show_phys_bbox      :  Shows the square outline of objects.  (light blue)
\par grid_3d             :  toggle grid display in 3d
\par grid_2d             :  toggle grid display in 2d
\par grid_3d_axis        :  3d grid normal axis (0 for e-w u-d (x-axis), 1 for n-s u-d (y-axis), 2 for n-s e-w (z-axis)(default)) (not under view menu but should be)
\par grid_move           :  move the grid relative to current position in the direction of its axis (can be positive or negative) (not under view menu but should be)
\par 
\par }{\b : Shapes
\par }{set_primal          :  set default terrain brush (1=cylinder, 2=pyramid, 3=Corner Apex Pyramid, 0=cube)
\par prim_sides          :  # of sides on next terrain brush
\par prim_type           :  What shape for the next terrain brush (1=cylinder, 2=pyramid, 3=Corner Apex Pyramid, 0=cube)
\par cube                :  set cube
\par prim_facealign      :  changes the texture from world aligned to brush aligned and back again (found in menu at bottom of the screen in Dromed)
\par prim_special        :  set 'special' primal type (crashes Dromed)
\par 
\par }{\b : Tools
\par }{optimize            :  build optimized portalization
\par portalize           :  make a 3d world out of brushes
\par rooms_build         :  build the room database
\par ai_build_path_database:  Update the AI path database
\par relight_level       :  relight the level.  Best used when adding lighting but not terrain.
\par ambient             :  sets the ambient light for the mission.  ie. "ambient 20"
\par set_lighting_mode   :  Set lighting mode (0 for Quicklighting, 1 for Raycast, 2 for Objlight)
\par obj_histogram_popup :  Brings up obj list sorted by usage.
\par obj_alpha_popup     :  Brings up obj list sorted alphabetically.
\par 
\par }{\b :Editors
\par }{obj_tree            :  Object Hierarchy editor
\par texture_pal         :  Brings up the texture palette
\par motedit             :  Brings up the motion editor.  How to use the motion editor is unknown.
\par edit_file_vars      :  Edit Parameters.  0 for mission, 1 for gamesys, 2 for campaign
\par quest_edit_mis      :  bring up the mission variables menu.  Only works if there currently are mission variables entered.
\par quest_edit          :  bring up the campaign variables menu.  Campaign variables are unneeded for FMs.
\par 
\par }{\b : Game
\par }{game_mode           :  switch to game mode.  Specify the resolution by typing in width, height.  Standard resolutions are- 320,200 320,240 400,300 512,384 640,400 640,480 800,600 1024,768 1280,1024 ie. "game_mode 640,400"
\par 
\par }{\b : Mbrush
\par }{load_group          :  loads a vbr
\par save_group          :  saves a vbr
\par brush_relative      :  sets how the texture is applied.  0 for world relative, 1 for brush relative
\par add_brush_num       :  add current brush to group.  ie add_brush_num 1000
\par rem_brush_num       :  remove current brush from group
\par tog_brush_num       :  add or remove the current brush from group.  This depends on whether brush is part of the group or not.
\par stair_serf          :  build some straight stairs.  Built southwards, it uses the depth of the cube for the total depth of the stairs.  In order for ai to use the stairs, set the height to be 0.75 (or less) times the number of stairs.
\par }\pard \s15\fi-2520\li2520\nowidctlpar\widctlpar\adjustright {
\par }{\b Bound Commands and commands appearing at the bottom of the screen
\par }{floor_object        :  moves the object to the floor
\par edit_links          :  shows all the links in the level or object specified.  This includes links in archtypes.  This command is more advanced than this but I will not go into detail on it.
\par ar_list_receptrons  :  list an object's receptrons or all receptrons.  Only works on the base level for objects and archtypes.
\par ar_list_sources     :  list an object's sources or all sources.  Only works on the base level for objects and archtypes.
\par new_brush           :  makes a new brush that is identical to the last brush selected but has dimensions of 2,2,2
\par go_to_meonly        :  Hilights the meonlyed brush.  Does not move you there.
\par cam_rotate          :  rotate current camera.  1-down, 4-up, 2-left, 5-right, 3-pitch, 0-negative pitch
\par cam_slew            :  Move the camera in a direction.  0-forward, 3-backwards, 1-sidestep left, 4-sidestep right, 2-down, 5-up
\par cam_level           :  Makes the cam face directly forward
\par cam_unroll          :  Removes the tilt from the camera
\par solo_toggle         :  Makes the currently selected view take up the entire screen
\par cycle_media         :  changes the selected brush's type. (eg. from air to solid) 1 for forward, -1 for backward
\par vBrush_EOT          :  Moves the selected brush to the last time position.
\par cycle_brush         :  Selects the next brush in time.  1 for next brush, -1 for previous brush
\par set_medium          :  selects what type of brush you have selected is.  0-solid, 1-air, 2-water, 3-flood, etc
\par load_a_texture      :  load a single texture, load <fam> <txtname>
\par remove_a_texture    :  delete a single texture, <fam> <name>
\par 
\par 
\par }{\b AI useful stuff
\par }{
\par ai_draw             :  Draw AI debug info like heading, vision, pathcheck
\par ai_draw_in_game     :  switch from allowing debug to not allowing debug and vice-versa
\par ai_use_zones        :  Toggle use of AI zones (do AI push other AIs away?)
\par ai_draw_move_goal   :  pink line showing the immediate destination of the AI
\par ai_draw_suggestions :  white heading arrow
\par ai_draw_paths       :  large red eighth of a circle that points to what an AI wants to move around to get to the move_goal
\par aidebugmode         :  Tom's standard AI debug mode will turn off if used
\par ai_something_watch  : These will all get dumped to the mono log if you have the aidebugmodoeon. For instance, if you 
want to know how an guard reacts in a situation, put on ai_signal_watch or ai_hear_watch. Perhaps the best is ai_watch, as that toggles everything about how an AI reacts.
\par ai_signal           : Simulates sending out a signal to AIs. If you set up a signal r
esponse to the signal 'run' for every guard to rush to a door, doing ai_signal will get the guards running to the door. Only useful if you have been making your own signals.
\par 
\par }{\b AI useless stuff and AI stuff I don't understand
\par }{
\par ai_check_lighting   :  Check AI Raw Lighting on an Obj.  Messed up lighting in game mode, or was that blame_lighting?
\par blame_lighting      :  Mprint causes of lighting on an Obj
\par ai_alert_watch      :  Watch an AIs sense/awareness
\par ai_flow_watch       :  Watch the decision flow of an AI
\par ai_sound_watch      :  Watch the sound/broadcast of an AI
\par ai_hear_watch       :  See what an AI is hearing
\par ai_combat_watch     :  Watch AI Combat
\par ai_path_watch       :  Watch AI pathfind and path progression
\par ai_death_watch      :  Watch AI death event and cause
\par ai_signal_watch     :  Watch AI signals
\par ai_ranged_watch     :  Watch AI ranged combat
\par ai_inform_watch     :  Watch AI inform stream
\par ai_sight_watch      :  Watch AI inform stream
\par ai_pulse_watch      :  Watch AI sensory pulses
\par ai_recover_watch    :  Watch AI path recovery
\par ai_watch            :  Toggle all watches on an AI
\par ai_dump_components  :  Dump the list of components an AI is made of
\par ai_dump_all         :  Dump all info in an AI
\par ai_break            :  Break in the debugger on run of a specific AI
\par ai_player_sound     :  Simulate player sound broadcast of specified type
\par ai_set_recover_test_post:  
\par ai_set_recover_test_dest:  
\par ai_set_recover_test_result:  
\par ai_test_recover     :  
\par ai_draw_cells       :  show AI path cells in wireframe
\par ai_draw_links       :  show AI path cell links in wireframe
\par ai_draw_zone        :  show AI path zone
\par ai_draw_room        :  show AI path cells in room
\par ai_spew_zone        :  spew AI path zone
\par ai_spew_zones       :  spew all AI path zones
\par ai_draw_one_cell    :  path cell to highlight (0 for none)
\par ai_draw_cell_centers:  
\par ai_dump_cell_connection:  mono print links from cell
\par ai_dump_cell_vertex_data:  show cell vertex list on mono
\par ai_conv_start       :  start a conversation (by objID)
\par ai_cam_to_cell      :  Send camera to AI cell
\par ai_print_cam_cell   :  
\par ai_test_cells       :  
\par 
\par }{\b The useless commands
\par }{
\par hit_rope            :  Hit a rope.  must specify objID
\par scrips_dump_files   : Lists the mission scripts, currently redundant as we only ever use convict.
\par show_mip            : Used in game mode to display how the mip maps are shown. Sometimes useful for scene complexity problems. Toggle set.
\par show_cell           : when in game mode makes everything go patchwork style, displays the AI cells.
\par show_poly           : Game mode shows polygon outlines.
\par set_3d_zoom         : Changes how the 3d window in dromed is displayed.
\par hilight_room_id     : Hilights the selected room id, useful if it crashed the previous time round and you wanted delete the blighter that is causing it.
\par hilight_obj_type    : hilights all objects of the type you ask for, ie. "hilight_obj_type marker" if you want to look at your markers.
\par list_props          : Very useful if you are into S&Rs, gives the names of the terms you use in set property effect.
\par make_archetype      : Haven't used it but it's use is fairly obvious, you have made an object in Dromed that you want to put into the gamesys, so use this command.
\par play_schema         : Will start the playing of a schema, usually used in ambient sounds. (See Dayt for details)
\par halt_schema         : Stops a specific schema.
\par halt_schemas        : Stops all schemas.
\par zggtvrk_load_schema : Used to import custom schema files (See Dayt for detials)
\par zggtvrk_load_schemas: Used to import a directory of schema files
\par 
\par }{\b Commands I don't understand, and commands that do not work
\par }{
\par get_pixel_color     :  click on pixel, get told it's color. Makes the curser disappear
\par script_dump_files   :  List mission script files
\par fixup_player        :  Make a player starting point based on OldPlayer.  This might be outdated.
\par edit_load_game      :  Load a save game in editor.  couldn't get it to work.
\par edit_save_game      :  Save a save game in editor.  crashed dromed.  Possibly needs a loaded game to save?
\par no_fam_compress     :  disallow texture space compression.  Didn't work.
\par explode_me          :  BOOM.  Or not.
\par ar_stimulate        :  Test-stimulate an object
\par player_light        :  attach a light to the player.  I see no light.  Tried this in game mode.
\par show_sim_time       :  Display the sim time on the status bar.  possibly needs motion editor?
\par time_stats          :  more stat fun with timings
\par tmgr_stats          :  mprint texture manager stats
\par playtest_stats      :  set frequency for per frame stats
\par phys_stats          :  Spew memory usage stats
\par time_passes         :  Set whether sim time is passing
\par list_obj            :  w/no arg, shows counts, w/args, lists all objs in id order
\par quest_spew_sub      :  quest_spew_sub <objID>  I couldn't get it to work.
\par quest_sub           :  quest_sub <objID>,<name>
\par quest_unsub         :  quest_unsub <objID>,<name>
\par quest_get           :  quest_get <name>
\par game_strings_load   :  load [<table>]: load the specified string table(s) into its property
\par game_strings_dump   :  dump [<table>]: dump the specified string table(s) from its property
\par game_strings_strip  :  strip [<table>]: strip text values from the property corresponding to the table.
\par game_strings_modernize:  modernize [<table>]: converts the property corresponding to the table to the hip gamestrings format.
\par old_raycast         :  boolean toggle
\par render_backward     :  shows view back to front
\par mip_detail          :  MIP level slider (0-1.0)
\par show_mip            :  levels of detail in rendering
\par show_cell           :  show cells in rendering database
\par show_poly           :  show polygon outlines
\par show_poly_flags     :  show flag settings of polygons
\par show_cell_flags     :  show flag settings of cells
\par show_poly_edges     :  show wireframes in world
\par show_all_edges      :  show complete wireframes
\par wr_stats            :  dump all worldrep stats
\par wr_check_cells      :  do assertion checking on worldrep
\par cc                  :  show cell and teleport to it
\par set_3d_zoom         :  float variable
\par ctimer_init         :  clear c-function profiling
\par ctimer_dump         :  show results of c-function profiling
\par dump_bsp            :  dump the worldrep bsp tree
\par show_one_cell       :  wireframe on given cell
\par cell_teleport       :  move editor cam to given cell
\par show_creature_joints:  boolean toggle
\par mesh_segs_display   :  boolean toggle
\par mesh_joints_display :  boolean toggle
\par mesh_segs_reset     :  function
\par mesh_seg_incr       :  function
\par mesh_seg_set        :  integer variable
\par lit_obj_toggle      :  boolean toggle
\par rend_objname_color  :  3d obj name color
\par rend_name_toggle    :  set color, toggle name color
\par rend_name_list      :  list all rendered objs to mono
\par test_defer          :  test func for uiDefer
\par start_pnp           :  Change the plug-n-play gadget
\par start_swap          :  Change the swap gadget
\par coord_mask          :  Hide/show some GFH coords
\par gfh_coord_edit      :  Text edit coord N
\par cycle_view          :  change current camera
\par cam_swap            :  swap two cameras
\par cycle_mode          :  change rendering mode
\par set_mode            :  set rendering mode
\par toggle_synch        :  toggle 2d synch mode
\par toggle_persp        :  toggle 3d perspective
\par xmouse              :  auto-select camera under mouse
\par cam_warp            :  warp camera to mouse loc
\par toggle_mode         :  toggle a display aspect
\par solo_toggle         :  toggle this view being soloed
\par redraw_always       :  does the editor continually redraw
\par vm_refresh          :  redraw all views
\par quick_resynch       :  synch; redraw; then desynch
\par vm_win_mode         :  wincfg set mode
\par vm_layout           :  cycle/set vm win layout
\par vm_name_corner      :  set corner for names (-1 no draw)
\par fix_rooms           :  Fix dangling room pointers
\par hilight_room_id     :  Hilight the specified room brush
\par edit_mode           :  Switch to editor mode: edit_mode <wid>,<hgt>
\par mono_debug          :  Enter monochrome debug screen
\par motedit             :  Bring up the motion editor
\par redraw_all          :  Redraw the editor screen
\par set                 :  set a config var: set <var> <value>
\par get                 :  Look up a config value: get <var>
\par eval                :  Exec a command with config substitution: eval <var> <cmd>
\par ifdef               :  exec a command if a config variable is defined: ifdef <var> <cmd>
\par ifndef              :  exec a command if a config variable is undefined: ifndef <var> <cmd>
\par unset               :  Unset a config variable: unset <var>
\par link_show_all       :  show links marked as hidden in the link editor
\par hilight_obj_type    :  hilight all instances of an archetype
\par link_group          :  a group of two objs get linked, select is dest, arg is relation
\par link_objs           :  link_objs src dst flavor
\par link_draw_on        :  show a kind of link in wireframe
\par link_draw_off       :  don't show a kind of link in wireframe
\par edit_file_vars      :  0 = mission vars, 1 = gamesys vars, 2 = cmpaign vars
\par game_mode_edit      :  Edit screen mode params for game mode.
\par help                :  shows command info
\par run                 :  run commands in file
\par end_mode            :  End the current major mode
\par set                 :  set a config var: set <var> <value>
\par get                 :  Look up a config value: get <var>
\par eval                :  Exec a command with config substitution: eval <var> <cmd>
\par ifdef               :  exec a command if a config variable is defined: ifdef <var> <cmd>
\par ifndef              :  exec a command if a config variable is undefined: ifndef <var> <cmd>
\par unset               :  Unset a config variable: unset <var>
\par clear_world         :  Reset to the empty world
\par dispatch_noise      :  Toggle dispatch noise for hex message mask
\par unfly               :  int function
\par trait_cache_params  :  Edit trait cache parameters
\par trait_cache_clear   :  Empty the trait cache
\par link_lock_count     :  Report the number active link queries
\par list_props          :  List properties on mono
\par link_dump_stats     :  Dump tons of stats on links
\par find_lost_objs      :  Find lost objects and set their archetypes to 'missing' 
\par purge_missing_objs  :  Delete all objects that inherit from 'Missing'
\par briefcase_save      :  Try to save the briefcase
\par briefcase_load      :  Try to load the briefcase
\par link_many           :  Link many concrete objects
\par unlink_many         :  Unlink many concrete objects
\par make_archetype      :  Clone a concrete into an archetype
\par move_game_camera    :  teleport game camera
\par build_motion_database:  read in motion schemas as build database
\par save_motion_database:  save out current built motion database
\par select_gun          :  select_gun <archetype>  Shoot a bullet out of the player
\par movie               :  show a movie
\par contrast            :  Set the contrast
\par gamma               :  Set the gamma
\par gamma_delta         :  Add float to gamma
\par flash               :  Make a blinding flash
\par contrast_time_scale :  contrast time scale
\par script_test         :  Send a 'test' message to an object
\par trace_add           :  <object> <message> <action> <line>
\par trace_remove        :  <object> <message>
\par trace_line          :  toggle a script trace line
\par trace_dump          :  show all traces
\par trace_dump_active   :  show all traces on active lines
\par trace_line_dump     :  show status of all trace lines
\par flip_highpoly       :  bool function
\par anim_light_reset    :  function
\par heap_alloc_cap      :  dump alloc cap
\par heap_dump_stats     :  dump heap stats
\par heap_dump_modules   :  dump heap usage by module
\par heap_dump_blocks    :  dump all allocated heap blocks
\par heap_dump_all       :  dump all allocated heap blocks
\par heap_test           :  validate the heap
\par ambient_spew        :  boolean toggle
\par ambient_heartbeat   :  boolean toggle
\par ambient_show        :  boolean toggle
\par ambient_dump        :  function
\par trait_cache_stats   :  Dump trait cache stats to mono
\par trait_id_stats      :  Get trait statistics
\par trait_name_stats    :  Get trait statistics by name
\par trait_max_id        :  Get max trait ID
\par trait_cache_fullness:  Get cache entry count
\par prop_time_stats     :  Get property storage timing statistics.
\par prop_time_stats_clear:  Clear property timing statistics.
\par prop_blame          :  Blame properties for memory
\par sparse_hash_stats   :  List sparse hash stats
\par start_ms_profile    :  function
\par hello_debugger      :  Hard-coded breakpoint
\par mclear              :  clear mono
\par mprint              :  print mono string
\par mlog                :  monolog state: close closes, name opens
\par playtest_which      :  which: 1 heap, 2 resource, 4 looptime
\par looptime_cmd        :  0 dump, 1 clear, 2 both, 3 on, 4 off, 5 toggle
\par resstats_cmd        :  0 dump, 2 tracking, 3 cleartrack, 4 dump, 5 flush/dump
\par txm_toggle          :  
\par do_report           :  function
\par do_cur_reprt        :  string function
\par toggle_overlay      :  takes which to toggle
\par dark_version        :  Display version in game mode.
\par metagame            :  Go to metagame UI.
\par endgame             :  Go to endgame mode.
\par mission_loop        :  Return to (or start) the mission loop
\par cret_set_debug_obj  :  set debug obj
\par cret_set_focus_obj  :  set creature's focus obj
\par cret_set_focus_loc  :  set creature's focus loc
\par cret_saveload_test  :  test creature saveload
\par toggle_mot_quat_debug:  toggle motion quaternion debugging
\par fixup_creature_phys :  fix up physics for all creatures
\par spew_creature_standable:  spew all object AIs can stand on
\par player_align_arrow  :  calc arrow alignment so straight
\par player_spew_arm_offset:  spew arm offset from camera to monochrome
\par main_menu           :  Go to main menu.
\par sim_menu            :  Go to sim menu.
\par quick_save          :  Save the game to the 'quick save' slot.
\par quick_load          :  Load the game from the 'quick save' slot
\par deref_containees    :  Remove Refs from all contained objs
\par test_access         :  string function
\par texture_usage_count :  get usage count for this texture
\par texture_wr_usage_count:  get wr usage for tmap_id, or histo if 0
\par texture_wr_find_zero:  find texture zero in the world
\par palmgr_count        :  bool function
\par load_water          :  load a water texture
\par add_water           :  add a water texture
\par free_water          :  free a water texture
\par texture_zap         :  zap invalid textures to newval
\par texture_zap_all     :  zap all textures to newval
\par texture_change      :  swap oval,nval - modifies all faces
\par family_dump         :  dump all current family info
\par secret_rem_family_name:  hi dorian
\par rooms_spew          :  Spew entire room database
\par spew_room_obj       :  List room for specified object
\par show_player_room    :  Draw the player's room obj
\par door_slam_open      :  
\par door_slam_closed    :  
\par remap_room_type     :  Remap EAX room type
\par set_room_type       :  Set EAX room type of selected room brush
\par next_room           :  Select and go to next room brush
\par spew_room_ai        :  List each AI's current room
\par show_sounds         :  Toggles visible sound display
\par draw_sound_path     :  Draw the sound prop path
\par clear_sound_path    :  Clears any drawn sound paths
\par spew_sounds         :  Spews all propagating sounds
\par ai_room_db_spew     :  Spew AI Room Path Database
\par play_schema         :  Play a named schema
\par play_schemas        :  Play two schemas
\par destroy_schemas     :  Destroy all schemas
\par destroy_speech      :  Destroy all speech
\par destroy_sound       :  Destroy all schemas and speech
\par halt_schema         :  Halt the first instance of a playing schema
\par halt_schemas        :  Halt all playing schemas
\par reload_schemas      :  Load all schemas in path (don't destroy)
\par ar_receptron_add    :  Add an act/react receptron
\par ar_receptron_query  :  Query a set of act/react receptron
\par ar_source_add       :  Add an act/react source
\par physics             :  Activate/Deactivate physics
\par start_control       :  Start obj 3 under ctrl
\par stop_control        :  Stop control of obj 3
\par launch_sphere       :  Launch a sphere object
\par create_sphere       :  Create a sphere model
\par launch_obb          :  Launch a obb object
\par create_obb          :  Create a obb model
\par reset_moving_terrain:  Reset all moving terrain
\par phys_spew_info      :  Spew Info on an object
\par phys_spew_player    :  Spew Info on the player
\par phys_joyride        :  
\par phys_raycast        :  
\par loc_control_obbs    :  Location control all OBBs
\par spew_out_of_world   :  Spew all objs out of world
\par spew_awake_objects  :  Spew all awake objects
\par spew_ai_collides    :  Spew all objects AI collide with
\par init_obb_dims       :  Init the dims of obb(s)
\par init_spherehat_dims :  Init the dims of sphere hat(s)
\par clear_phys_timers   :  Clear profiling timers
\par check_doors         :  Make sure door state is in sync
\par check_mterr         :  Make sure mterr state is in sync
\par d3d_stars           :  toggle doing d3d stars
\par span_sky            :  toggle doing span stars
\par toggle_mm_indexed   :  toggle using indexed r3d interface
\par toggle_mm_sort      :  punt mm sort
\par toggle_mm_xform     :  punt mm transforms
\par toggle_mm_render    :  punt mm render
\par toggle_render_mesh  :  toggle render mesh
\par toggle_draw_lgd3d   :  toggle draw lgd3d
\par toggle_lightmap_first:  toggle lightmap rendering order
\par toggle_d3d_buffer   :  toggle d3d primitive buffering
\par toggle_d3d_blend_trans:  toggle transparent texel color search
\par toggle_draw_surface :  toggle draw surface
\par toggle_hardware_lighting:  toggle hardware lighting
\par toggle_two_pass     :  toggle two pass rendering
\par toggle_multitexture :  toggle multitexture support
\par fast_poly_setup     :  do fast poly setup
\par slow_poly_setup     :  do slow poly setup
\par toggle_render_on_start_frame:  toggle normal render loop
\par flash_clamp         :  Set flashbomb max effect time in ms
\par set_mesh_detail_dist:  set distance at which stretchy mesh is punted
\par set_gamma           :  set gamma correction level. 1.0 = no correction
\par set_obj_zbias       :  set object rendering z bias (in bits)
\par set_znear           :  set max sorting z distance
\par set_zfar            :  set min sorting z distance
\par add_brush_num       :  string function
\par rem_brush_num       :  string function
\par tog_brush_num       :  string function
\par cycle_brush         :  int function
\par cycle_context       :  cycle to next like brush (vBrush or type)
\par store_group         :  save cur vBrush to new ID
\par dissolve_group      :  remove group ID of vBrush
\par pick_group_name     :  pick group by name
\par cycle_group         :  move group by arg (0 is last)
\par brush_relative      :  boolean toggle
\par axial_scale         :  boolean toggle
\par cycle_face          :  int function
\par cycle_edge          :  int function
\par cycle_point         :  int function
\par brush_select        :  int function
\par obj_brush_select    :  set current brush to objID
\par vBrush_click        :  alt-click cur brush
\par vBrush_EOT          :  send to end of time
\par refresh_particle_links:  Update all ParticleAttachement links
\par cycle_tex           :  int function
\par sky_tex             :  function
\par align_tex           :  function
\par cycle_media         :  int function
\par set_debug_tex       :  int function
\par reset_brush         :  function
\par brush_stretch       :  stretch current brush
\par brush_rotate        :  rotate current brush
\par brush_translate     :  translate current brush
\par fit_cameras         :  fit cameras to world/hot region
\par auto_portalize      :  boolean toggle
\par auto_roombuild      :  boolean toggle
\par brush_adopt         :  all brushes adopt from us (arg for which parameter)
\par spiral_serf         :  build spiral stair, 0 for dialog
\par snap_placement      :  boolean toggle
\par clear_brushes       :  clear all brushes
\par set_medium          :  set brush medium
\par blist_dump          :  function
\par get_grid            :  get grid from brush
\par set_grid            :  force brush to grid
\par grid_toggle         :  turn grid on off
\par grid_scale          :  rescale the master grid
\par grid_abs_scale      :  set absolute scale of master grid
\par brush_go_last       :  move current brush to temporal last
\par brush_set_time      :  move current brush to time n
\par load_object         :  load 3d object
\par preload_sound       :  string function
\par preload_motion      :  string function
\par preload_stats       :  function
\par brush_color         :  integer variable
\par brush_filter        :  integer variable
\par hots_filter         :  boolean toggle
\par hots_state          :  int function
\par time_filter_lo      :  integer variable
\par time_filter_hi      :  integer variable
\par size_filter         :  float variable
\par set_brush_tx        :  int function
\par set_brush_type      :  int function
\par reset_brush_tx      :  int function
\par obj_ambient         :  float variable
\par obj_diffuse         :  float variable
\par info_window         :  function
\par lazy_update         :  do we update instantly, or only on new brush selection
\par run_cmd_script      :  string function
\par brush_to_mono       :  show brush info on mono
\par obj_split           :  always portal split objects
\par obj_re_place        :  replace all objects in world
\par passive_hotregions  :  are hotregions in the CSG, or just filters
\par show_image          :  load image from disk
\par play_sfx            :  string function
\par heapchk             :  Test the heap, if debugging heap enabled
\par monodebug           :  output mono to Windows debug stream
\par save_wr             :  save world rep to file
\par merge_node          :  build faster imperfect level
\par optimize_bsp        :  boolean toggle
\par quad_lighting       :  oversampled raycast lighting
\par auto_hilight        :  automatically hilight any bad brushes after portalization
\par split_polys         :  force coplanar poly splits
\par merge_polys         :  merge coplanar polys
\par coplanar            :  correctly handle coplanar polys
\par csg_epsilon         :  set voodoo epsilon value
\par show_debug          :  set split# to debug, -1 for all #s
\par tex_scale_override  :  set texture scale override factor
\par profile             :  write out sProf profile
\par hilight_split_obj   :  highlight objects crossing a portal
\par multibrush_the_highlight:  make hilight objs the multibrush
\par hilight_brush       :  hilight current (0) or brush_id
\par hilight_list        :  list objs, or, if arg 1, all brush ids
\par hilight_autoclear   :  do we autoclear old hilight and make it only active
\par hilight_use         :  set which hilight bit to use (bitfield, must be just 1)
\par hilight_activate    :  turn on hilight bits
\par hilight_deactivate  :  turn off hilight bits
\par hilight_add_prop    :  Add a named property to all hilit objects
\par hilight_rem_prop    :  Add a named property to all hilit objects
\par hilight_render      :  boolean toggle
\par line_autoremote     :  toggle autochannel switch in line display
\par line_switchchannel  :  set view to single channel id
\par line_viewchannel    :  set bitmask of currently visible line channels
\par line_loadchannel    :  set channel id to load to
\par line_clearchannel   :  clear all lines in channel id
\par line_loadfile       :  load a file to current line channel
\par cam_level           :  level current camera
\par cam_unroll          :  unroll current camera
\par num_scroll          :  scroll via numeric keypad
\par global_scale        :  zoom in/out & rescale
\par show_raycasts       :  display light raycasts
\par min_show            :  min id# raycast to show
\par max_show            :  max id# raycast to show
\par record_movement     :  show rays of samples moving
\par cam_spotlight       :  mounted spotlight toggle
\par blend               :  integer variable
\par test_blend          :  boolean toggle
\par traverse_log        :  log cell traversal to traverse.log
\par clear               :  clear framebuffer to pink
\par max_polys           :  maximum polygons to draw
\par show_lightmap       :  display light sampling
\par render_info         :  rendering stats at some volume
\par detail_level        :  mipmap detail level (0-1)
\par dot_clamp           :  mipmap orientation limit
\par surf_256            :  surfaces are all row==256
\par show_span_lengths   :  boolean toggle
\par show_render_times   :  detailed rendering timing info
\par info_volume         :  determine amount of rendering information
\par portal_clip_poly    :  boolean toggle
\par portal_clip_fast    :  boolean toggle
\par poly_clip_fast      :  boolean toggle
\par always_slow_split   :  force split objects to do things the hard way
\par show_particle_counts:  show count of particle sim/render
\par show_particle_sim   :  list particle objects set to always_simulate
\par cache_feedback      :  get extra surface cache info
\par light_scale         :  float variable
\par min_light           :  minimum dynamic light on a surface allowed visible
\par max_dist_2          :  maximum distance dynamic light can reach
\par keep_all_lit        :  boolean toggle
\par show_cells          :  Display cells containing refs
\par span_clip           :  enable span clipping in the renderer
\par portal_model        :  render models through portal tmappers
\par full_obj_test       :  choose all/incomplete cell lists for object sort testing
\par show_split          :  outline objects being split
\par show_bbox           :  show bounding boxes around objects
\par show_bbox_2d        :  outline objects
\par disable_topsort     :  disable good objsort
\par show_shadtab        :  draw shading table
\par pick_shade_dist     :  pick which rule for distance
\par puntd3d             :  boolean toggle
\par zbuffer             :  boolean toggle
\par znup                :  function
\par zndown              :  function
\par zfup                :  function
\par zfdown              :  function
\par zlinear             :  function
\par agglight            :  boolean toggle
\par nullrast            :  function
\par palette_light       :  boolean toggle
\par skip_clip           :  boolean toggle
\par project_space       :  boolean toggle
\par linear_map          :  affine mapper for terrain
\par surface_cache       :  cache lit surfaces
\par edit_command        :  edit a command in the command editor: edit_command <cmd>
\par history_cmd         :  edit command from history offset
\par report_bug          :  signal a bug in game
\par }}